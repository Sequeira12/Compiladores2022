Terminals unused in grammar

    ARROW
    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: CLASS ID LBRACE declaration RBRACE

    2 declaration: MethodDecl declaration
    3            | FieldDecl declaration
    4            | SEMICOLON declaration
    5            | %empty

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody

    7 FieldDecl: PUBLIC STATIC Type ID FindDeclSec SEMICOLON

    8 FindDeclSec: COMMA ID FindDeclSec
    9            | %empty

   10 Type: BOOL
   11     | INT
   12     | DOUBLE

   13 MethodHeader: Type ID LPAR MethodHeaderSec RPAR
   14             | VOID ID LPAR MethodHeaderSec RPAR

   15 MethodHeaderSec: FormalParams
   16                | %empty

   17 FormalParams: Type ID FormalParamsSec
   18             | STRING LSQ RSQ ID

   19 FormalParamsSec: COMMA Type ID FormalParamsSec
   20                | %empty

   21 MethodBody: LBRACE MethodBodySec RBRACE

   22 MethodBodySec: Statement MethodBodySec
   23              | VarDecl MethodBodySec
   24              | %empty

   25 VarDecl: Type ID VarDeclSec SEMICOLON

   26 VarDeclSec: %empty
   27           | COMMA ID VarDeclSec

   28 Statement: LBRACE StatementSec RBRACE
   29          | IF LPAR Expr RPAR Statement
   30          | IF LPAR Expr RPAR Statement ELSE Statement
   31          | WHILE LPAR Expr RPAR Statement
   32          | RETURN SEMICOLON
   33          | RETURN Expr SEMICOLON
   34          | StatementThird SEMICOLON
   35          | PRINT LPAR StatementPrint RPAR SEMICOLON

   36 StatementSec: Statement StatementSec
   37             | %empty

   38 StatementThird: %empty
   39               | MethodInvocation
   40               | Assignment
   41               | ParseArgs

   42 StatementPrint: Expr
   43               | STRLIT

   44 MethodInvocation: ID LPAR MethodInvocationSec RPAR

   45 MethodInvocationSec: Expr MethodInvocationThird
   46                    | %empty

   47 MethodInvocationThird: COMMA Expr MethodInvocationThird
   48                      | %empty

   49 Assignment: ID ASSIGN Expr

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR
   51          | PARSEINT LPAR error RPAR

   52 Expr: Expr PLUS Expr
   53     | Expr MINUS Expr
   54     | Expr STAR Expr
   55     | Expr DIV Expr
   56     | Expr MOD Expr
   57     | Expr AND Expr
   58     | Expr OR Expr
   59     | Expr XOR Expr
   60     | Expr LSHIFT Expr
   61     | Expr RSHIFT Expr
   62     | Expr EQ Expr
   63     | Expr GE Expr
   64     | Expr GT Expr
   65     | Expr LE Expr
   66     | Expr LT Expr
   67     | Expr NE Expr
   68     | PLUS Expr
   69     | MINUS Expr
   70     | NOT Expr
   71     | MethodInvocation
   72     | ParseArgs
   73     | LPAR error RPAR
   74     | ID
   75     | ID DOTLENGTH
   76     | INTLIT
   77     | REALLIT
   78     | BOOLLIT


Terminals, with rules where they appear

    $end (0) 0
    error (256) 51 73
    AND (258) 57
    ASSIGN (259) 49
    STAR (260) 54
    COMMA (261) 8 19 27 47
    DIV (262) 55
    EQ (263) 62
    GE (264) 63
    GT (265) 64
    LBRACE (266) 1 21 28
    LE (267) 65
    LPAR (268) 13 14 29 30 31 35 44 50 51 73
    LSQ (269) 18 50
    LT (270) 66
    MINUS (271) 53 69
    MOD (272) 56
    NE (273) 67
    NOT (274) 70
    OR (275) 58
    PLUS (276) 52 68
    RBRACE (277) 1 21 28
    RPAR (278) 13 14 29 30 31 35 44 50 51 73
    RSQ (279) 18 50
    SEMICOLON (280) 4 7 25 32 33 34 35
    ARROW (281)
    LSHIFT (282) 60
    RSHIFT (283) 61
    XOR (284) 59
    CLASS (285) 1
    DOTLENGTH (286) 75
    ELSE (287) 30
    IF (288) 29 30
    PRINT (289) 35
    PARSEINT (290) 50 51
    PUBLIC (291) 6 7
    RETURN (292) 32 33
    STATIC (293) 6 7
    STRING (294) 18
    VOID (295) 14
    WHILE (296) 31
    INT (297) 11
    DOUBLE (298) 12
    BOOL (299) 10
    RESERVED (300)
    ID <id> (301) 1 7 8 13 14 17 18 19 25 27 44 49 50 74 75
    INTLIT <id> (302) 76
    REALLIT <id> (303) 77
    BOOLLIT <id> (304) 78
    STRLIT <id> (305) 43


Nonterminals, with rules where they appear

    $accept (51)
        on left: 0
    Program <N_no> (52)
        on left: 1
        on right: 0
    declaration <N_no> (53)
        on left: 2 3 4 5
        on right: 1 2 3 4
    MethodDecl <N_no> (54)
        on left: 6
        on right: 2
    FieldDecl <N_no> (55)
        on left: 7
        on right: 3
    FindDeclSec <N_no> (56)
        on left: 8 9
        on right: 7 8
    Type <N_no> (57)
        on left: 10 11 12
        on right: 7 13 17 19 25
    MethodHeader <N_no> (58)
        on left: 13 14
        on right: 6
    MethodHeaderSec <N_no> (59)
        on left: 15 16
        on right: 13 14
    FormalParams <N_no> (60)
        on left: 17 18
        on right: 15
    FormalParamsSec <N_no> (61)
        on left: 19 20
        on right: 17 19
    MethodBody <N_no> (62)
        on left: 21
        on right: 6
    MethodBodySec <N_no> (63)
        on left: 22 23 24
        on right: 21 22 23
    VarDecl <N_no> (64)
        on left: 25
        on right: 23
    VarDeclSec <N_no> (65)
        on left: 26 27
        on right: 25 27
    Statement <N_no> (66)
        on left: 28 29 30 31 32 33 34 35
        on right: 22 29 30 31 36
    StatementSec <N_no> (67)
        on left: 36 37
        on right: 28 36
    StatementThird <N_no> (68)
        on left: 38 39 40 41
        on right: 34
    StatementPrint <N_no> (69)
        on left: 42 43
        on right: 35
    MethodInvocation <N_no> (70)
        on left: 44
        on right: 39 71
    MethodInvocationSec <N_no> (71)
        on left: 45 46
        on right: 44
    MethodInvocationThird <N_no> (72)
        on left: 47 48
        on right: 45 47
    Assignment <N_no> (73)
        on left: 49
        on right: 40
    ParseArgs <N_no> (74)
        on left: 50 51
        on right: 41 72
    Expr <N_no> (75)
        on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
        on right: 29 30 31 33 42 45 47 49 50 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: CLASS . ID LBRACE declaration RBRACE

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: CLASS ID . LBRACE declaration RBRACE

    LBRACE  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: CLASS ID LBRACE . declaration RBRACE

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 5 (declaration)

    declaration  go to state 8
    MethodDecl   go to state 9
    FieldDecl    go to state 10


State 6

    4 declaration: SEMICOLON . declaration

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 5 (declaration)

    declaration  go to state 11
    MethodDecl   go to state 9
    FieldDecl    go to state 10


State 7

    6 MethodDecl: PUBLIC . STATIC MethodHeader MethodBody
    7 FieldDecl: PUBLIC . STATIC Type ID FindDeclSec SEMICOLON

    STATIC  shift, and go to state 12


State 8

    1 Program: CLASS ID LBRACE declaration . RBRACE

    RBRACE  shift, and go to state 13


State 9

    2 declaration: MethodDecl . declaration

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 5 (declaration)

    declaration  go to state 14
    MethodDecl   go to state 9
    FieldDecl    go to state 10


State 10

    3 declaration: FieldDecl . declaration

    SEMICOLON  shift, and go to state 6
    PUBLIC     shift, and go to state 7

    $default  reduce using rule 5 (declaration)

    declaration  go to state 15
    MethodDecl   go to state 9
    FieldDecl    go to state 10


State 11

    4 declaration: SEMICOLON declaration .

    $default  reduce using rule 4 (declaration)


State 12

    6 MethodDecl: PUBLIC STATIC . MethodHeader MethodBody
    7 FieldDecl: PUBLIC STATIC . Type ID FindDeclSec SEMICOLON

    VOID    shift, and go to state 16
    INT     shift, and go to state 17
    DOUBLE  shift, and go to state 18
    BOOL    shift, and go to state 19

    Type          go to state 20
    MethodHeader  go to state 21


State 13

    1 Program: CLASS ID LBRACE declaration RBRACE .

    $default  reduce using rule 1 (Program)


State 14

    2 declaration: MethodDecl declaration .

    $default  reduce using rule 2 (declaration)


State 15

    3 declaration: FieldDecl declaration .

    $default  reduce using rule 3 (declaration)


State 16

   14 MethodHeader: VOID . ID LPAR MethodHeaderSec RPAR

    ID  shift, and go to state 22


State 17

   11 Type: INT .

    $default  reduce using rule 11 (Type)


State 18

   12 Type: DOUBLE .

    $default  reduce using rule 12 (Type)


State 19

   10 Type: BOOL .

    $default  reduce using rule 10 (Type)


State 20

    7 FieldDecl: PUBLIC STATIC Type . ID FindDeclSec SEMICOLON
   13 MethodHeader: Type . ID LPAR MethodHeaderSec RPAR

    ID  shift, and go to state 23


State 21

    6 MethodDecl: PUBLIC STATIC MethodHeader . MethodBody

    LBRACE  shift, and go to state 24

    MethodBody  go to state 25


State 22

   14 MethodHeader: VOID ID . LPAR MethodHeaderSec RPAR

    LPAR  shift, and go to state 26


State 23

    7 FieldDecl: PUBLIC STATIC Type ID . FindDeclSec SEMICOLON
   13 MethodHeader: Type ID . LPAR MethodHeaderSec RPAR

    COMMA  shift, and go to state 27
    LPAR   shift, and go to state 28

    $default  reduce using rule 9 (FindDeclSec)

    FindDeclSec  go to state 29


State 24

   21 MethodBody: LBRACE . MethodBodySec RBRACE

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    INT       shift, and go to state 17
    DOUBLE    shift, and go to state 18
    BOOL      shift, and go to state 19
    ID        shift, and go to state 36

    SEMICOLON  reduce using rule 38 (StatementThird)
    $default   reduce using rule 24 (MethodBodySec)

    Type              go to state 37
    MethodBodySec     go to state 38
    VarDecl           go to state 39
    Statement         go to state 40
    StatementThird    go to state 41
    MethodInvocation  go to state 42
    Assignment        go to state 43
    ParseArgs         go to state 44


State 25

    6 MethodDecl: PUBLIC STATIC MethodHeader MethodBody .

    $default  reduce using rule 6 (MethodDecl)


State 26

   14 MethodHeader: VOID ID LPAR . MethodHeaderSec RPAR

    STRING  shift, and go to state 45
    INT     shift, and go to state 17
    DOUBLE  shift, and go to state 18
    BOOL    shift, and go to state 19

    $default  reduce using rule 16 (MethodHeaderSec)

    Type             go to state 46
    MethodHeaderSec  go to state 47
    FormalParams     go to state 48


State 27

    8 FindDeclSec: COMMA . ID FindDeclSec

    ID  shift, and go to state 49


State 28

   13 MethodHeader: Type ID LPAR . MethodHeaderSec RPAR

    STRING  shift, and go to state 45
    INT     shift, and go to state 17
    DOUBLE  shift, and go to state 18
    BOOL    shift, and go to state 19

    $default  reduce using rule 16 (MethodHeaderSec)

    Type             go to state 46
    MethodHeaderSec  go to state 50
    FormalParams     go to state 48


State 29

    7 FieldDecl: PUBLIC STATIC Type ID FindDeclSec . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 30

   28 Statement: LBRACE . StatementSec RBRACE

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    SEMICOLON  reduce using rule 38 (StatementThird)
    $default   reduce using rule 37 (StatementSec)

    Statement         go to state 52
    StatementSec      go to state 53
    StatementThird    go to state 41
    MethodInvocation  go to state 42
    Assignment        go to state 43
    ParseArgs         go to state 44


State 31

   29 Statement: IF . LPAR Expr RPAR Statement
   30          | IF . LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 54


State 32

   35 Statement: PRINT . LPAR StatementPrint RPAR SEMICOLON

    LPAR  shift, and go to state 55


State 33

   50 ParseArgs: PARSEINT . LPAR ID LSQ Expr RSQ RPAR
   51          | PARSEINT . LPAR error RPAR

    LPAR  shift, and go to state 56


State 34

   32 Statement: RETURN . SEMICOLON
   33          | RETURN . Expr SEMICOLON

    LPAR       shift, and go to state 57
    MINUS      shift, and go to state 58
    NOT        shift, and go to state 59
    PLUS       shift, and go to state 60
    SEMICOLON  shift, and go to state 61
    PARSEINT   shift, and go to state 33
    ID         shift, and go to state 62
    INTLIT     shift, and go to state 63
    REALLIT    shift, and go to state 64
    BOOLLIT    shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 68


State 35

   31 Statement: WHILE . LPAR Expr RPAR Statement

    LPAR  shift, and go to state 69


State 36

   44 MethodInvocation: ID . LPAR MethodInvocationSec RPAR
   49 Assignment: ID . ASSIGN Expr

    ASSIGN  shift, and go to state 70
    LPAR    shift, and go to state 71


State 37

   25 VarDecl: Type . ID VarDeclSec SEMICOLON

    ID  shift, and go to state 72


State 38

   21 MethodBody: LBRACE MethodBodySec . RBRACE

    RBRACE  shift, and go to state 73


State 39

   23 MethodBodySec: VarDecl . MethodBodySec

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    INT       shift, and go to state 17
    DOUBLE    shift, and go to state 18
    BOOL      shift, and go to state 19
    ID        shift, and go to state 36

    SEMICOLON  reduce using rule 38 (StatementThird)
    $default   reduce using rule 24 (MethodBodySec)

    Type              go to state 37
    MethodBodySec     go to state 74
    VarDecl           go to state 39
    Statement         go to state 40
    StatementThird    go to state 41
    MethodInvocation  go to state 42
    Assignment        go to state 43
    ParseArgs         go to state 44


State 40

   22 MethodBodySec: Statement . MethodBodySec

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    INT       shift, and go to state 17
    DOUBLE    shift, and go to state 18
    BOOL      shift, and go to state 19
    ID        shift, and go to state 36

    SEMICOLON  reduce using rule 38 (StatementThird)
    $default   reduce using rule 24 (MethodBodySec)

    Type              go to state 37
    MethodBodySec     go to state 75
    VarDecl           go to state 39
    Statement         go to state 40
    StatementThird    go to state 41
    MethodInvocation  go to state 42
    Assignment        go to state 43
    ParseArgs         go to state 44


State 41

   34 Statement: StatementThird . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 42

   39 StatementThird: MethodInvocation .

    $default  reduce using rule 39 (StatementThird)


State 43

   40 StatementThird: Assignment .

    $default  reduce using rule 40 (StatementThird)


State 44

   41 StatementThird: ParseArgs .

    $default  reduce using rule 41 (StatementThird)


State 45

   18 FormalParams: STRING . LSQ RSQ ID

    LSQ  shift, and go to state 77


State 46

   17 FormalParams: Type . ID FormalParamsSec

    ID  shift, and go to state 78


State 47

   14 MethodHeader: VOID ID LPAR MethodHeaderSec . RPAR

    RPAR  shift, and go to state 79


State 48

   15 MethodHeaderSec: FormalParams .

    $default  reduce using rule 15 (MethodHeaderSec)


State 49

    8 FindDeclSec: COMMA ID . FindDeclSec

    COMMA  shift, and go to state 27

    $default  reduce using rule 9 (FindDeclSec)

    FindDeclSec  go to state 80


State 50

   13 MethodHeader: Type ID LPAR MethodHeaderSec . RPAR

    RPAR  shift, and go to state 81


State 51

    7 FieldDecl: PUBLIC STATIC Type ID FindDeclSec SEMICOLON .

    $default  reduce using rule 7 (FieldDecl)


State 52

   36 StatementSec: Statement . StatementSec

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    SEMICOLON  reduce using rule 38 (StatementThird)
    $default   reduce using rule 37 (StatementSec)

    Statement         go to state 52
    StatementSec      go to state 82
    StatementThird    go to state 41
    MethodInvocation  go to state 42
    Assignment        go to state 43
    ParseArgs         go to state 44


State 53

   28 Statement: LBRACE StatementSec . RBRACE

    RBRACE  shift, and go to state 83


State 54

   29 Statement: IF LPAR . Expr RPAR Statement
   30          | IF LPAR . Expr RPAR Statement ELSE Statement

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 84


State 55

   35 Statement: PRINT LPAR . StatementPrint RPAR SEMICOLON

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65
    STRLIT    shift, and go to state 85

    StatementPrint    go to state 86
    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 87


State 56

   50 ParseArgs: PARSEINT LPAR . ID LSQ Expr RSQ RPAR
   51          | PARSEINT LPAR . error RPAR

    error  shift, and go to state 88
    ID     shift, and go to state 89


State 57

   73 Expr: LPAR . error RPAR

    error  shift, and go to state 90


State 58

   69 Expr: MINUS . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 91


State 59

   70 Expr: NOT . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 92


State 60

   68 Expr: PLUS . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 93


State 61

   32 Statement: RETURN SEMICOLON .

    $default  reduce using rule 32 (Statement)


State 62

   44 MethodInvocation: ID . LPAR MethodInvocationSec RPAR
   74 Expr: ID .
   75     | ID . DOTLENGTH

    LPAR       shift, and go to state 71
    DOTLENGTH  shift, and go to state 94

    $default  reduce using rule 74 (Expr)


State 63

   76 Expr: INTLIT .

    $default  reduce using rule 76 (Expr)


State 64

   77 Expr: REALLIT .

    $default  reduce using rule 77 (Expr)


State 65

   78 Expr: BOOLLIT .

    $default  reduce using rule 78 (Expr)


State 66

   71 Expr: MethodInvocation .

    $default  reduce using rule 71 (Expr)


State 67

   72 Expr: ParseArgs .

    $default  reduce using rule 72 (Expr)


State 68

   33 Statement: RETURN Expr . SEMICOLON
   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    AND        shift, and go to state 95
    STAR       shift, and go to state 96
    DIV        shift, and go to state 97
    EQ         shift, and go to state 98
    GE         shift, and go to state 99
    GT         shift, and go to state 100
    LE         shift, and go to state 101
    LT         shift, and go to state 102
    MINUS      shift, and go to state 103
    MOD        shift, and go to state 104
    NE         shift, and go to state 105
    OR         shift, and go to state 106
    PLUS       shift, and go to state 107
    SEMICOLON  shift, and go to state 108
    LSHIFT     shift, and go to state 109
    RSHIFT     shift, and go to state 110
    XOR        shift, and go to state 111


State 69

   31 Statement: WHILE LPAR . Expr RPAR Statement

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 112


State 70

   49 Assignment: ID ASSIGN . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 113


State 71

   44 MethodInvocation: ID LPAR . MethodInvocationSec RPAR

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    $default  reduce using rule 46 (MethodInvocationSec)

    MethodInvocation     go to state 66
    MethodInvocationSec  go to state 114
    ParseArgs            go to state 67
    Expr                 go to state 115


State 72

   25 VarDecl: Type ID . VarDeclSec SEMICOLON

    COMMA  shift, and go to state 116

    $default  reduce using rule 26 (VarDeclSec)

    VarDeclSec  go to state 117


State 73

   21 MethodBody: LBRACE MethodBodySec RBRACE .

    $default  reduce using rule 21 (MethodBody)


State 74

   23 MethodBodySec: VarDecl MethodBodySec .

    $default  reduce using rule 23 (MethodBodySec)


State 75

   22 MethodBodySec: Statement MethodBodySec .

    $default  reduce using rule 22 (MethodBodySec)


State 76

   34 Statement: StatementThird SEMICOLON .

    $default  reduce using rule 34 (Statement)


State 77

   18 FormalParams: STRING LSQ . RSQ ID

    RSQ  shift, and go to state 118


State 78

   17 FormalParams: Type ID . FormalParamsSec

    COMMA  shift, and go to state 119

    $default  reduce using rule 20 (FormalParamsSec)

    FormalParamsSec  go to state 120


State 79

   14 MethodHeader: VOID ID LPAR MethodHeaderSec RPAR .

    $default  reduce using rule 14 (MethodHeader)


State 80

    8 FindDeclSec: COMMA ID FindDeclSec .

    $default  reduce using rule 8 (FindDeclSec)


State 81

   13 MethodHeader: Type ID LPAR MethodHeaderSec RPAR .

    $default  reduce using rule 13 (MethodHeader)


State 82

   36 StatementSec: Statement StatementSec .

    $default  reduce using rule 36 (StatementSec)


State 83

   28 Statement: LBRACE StatementSec RBRACE .

    $default  reduce using rule 28 (Statement)


State 84

   29 Statement: IF LPAR Expr . RPAR Statement
   30          | IF LPAR Expr . RPAR Statement ELSE Statement
   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    AND     shift, and go to state 95
    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    EQ      shift, and go to state 98
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    NE      shift, and go to state 105
    OR      shift, and go to state 106
    PLUS    shift, and go to state 107
    RPAR    shift, and go to state 121
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111


State 85

   43 StatementPrint: STRLIT .

    $default  reduce using rule 43 (StatementPrint)


State 86

   35 Statement: PRINT LPAR StatementPrint . RPAR SEMICOLON

    RPAR  shift, and go to state 122


State 87

   42 StatementPrint: Expr .
   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    AND     shift, and go to state 95
    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    EQ      shift, and go to state 98
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    NE      shift, and go to state 105
    OR      shift, and go to state 106
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 42 (StatementPrint)


State 88

   51 ParseArgs: PARSEINT LPAR error . RPAR

    RPAR  shift, and go to state 123


State 89

   50 ParseArgs: PARSEINT LPAR ID . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 124


State 90

   73 Expr: LPAR error . RPAR

    RPAR  shift, and go to state 125


State 91

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr
   69     | MINUS Expr .

    STAR  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 104

    $default  reduce using rule 69 (Expr)


State 92

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr
   70     | NOT Expr .

    $default  reduce using rule 70 (Expr)


State 93

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr
   68     | PLUS Expr .

    STAR  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 104

    $default  reduce using rule 68 (Expr)


State 94

   75 Expr: ID DOTLENGTH .

    $default  reduce using rule 75 (Expr)


State 95

   57 Expr: Expr AND . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 126


State 96

   54 Expr: Expr STAR . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 127


State 97

   55 Expr: Expr DIV . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 128


State 98

   62 Expr: Expr EQ . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 129


State 99

   63 Expr: Expr GE . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 130


State 100

   64 Expr: Expr GT . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 131


State 101

   65 Expr: Expr LE . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 132


State 102

   66 Expr: Expr LT . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 133


State 103

   53 Expr: Expr MINUS . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 134


State 104

   56 Expr: Expr MOD . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 135


State 105

   67 Expr: Expr NE . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 136


State 106

   58 Expr: Expr OR . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 137


State 107

   52 Expr: Expr PLUS . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 138


State 108

   33 Statement: RETURN Expr SEMICOLON .

    $default  reduce using rule 33 (Statement)


State 109

   60 Expr: Expr LSHIFT . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 139


State 110

   61 Expr: Expr RSHIFT . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 140


State 111

   59 Expr: Expr XOR . Expr

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 141


State 112

   31 Statement: WHILE LPAR Expr . RPAR Statement
   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    AND     shift, and go to state 95
    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    EQ      shift, and go to state 98
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    NE      shift, and go to state 105
    OR      shift, and go to state 106
    PLUS    shift, and go to state 107
    RPAR    shift, and go to state 142
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111


State 113

   49 Assignment: ID ASSIGN Expr .
   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    AND     shift, and go to state 95
    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    EQ      shift, and go to state 98
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    NE      shift, and go to state 105
    OR      shift, and go to state 106
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 49 (Assignment)


State 114

   44 MethodInvocation: ID LPAR MethodInvocationSec . RPAR

    RPAR  shift, and go to state 143


State 115

   45 MethodInvocationSec: Expr . MethodInvocationThird
   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    AND     shift, and go to state 95
    STAR    shift, and go to state 96
    COMMA   shift, and go to state 144
    DIV     shift, and go to state 97
    EQ      shift, and go to state 98
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    NE      shift, and go to state 105
    OR      shift, and go to state 106
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 48 (MethodInvocationThird)

    MethodInvocationThird  go to state 145


State 116

   27 VarDeclSec: COMMA . ID VarDeclSec

    ID  shift, and go to state 146


State 117

   25 VarDecl: Type ID VarDeclSec . SEMICOLON

    SEMICOLON  shift, and go to state 147


State 118

   18 FormalParams: STRING LSQ RSQ . ID

    ID  shift, and go to state 148


State 119

   19 FormalParamsSec: COMMA . Type ID FormalParamsSec

    INT     shift, and go to state 17
    DOUBLE  shift, and go to state 18
    BOOL    shift, and go to state 19

    Type  go to state 149


State 120

   17 FormalParams: Type ID FormalParamsSec .

    $default  reduce using rule 17 (FormalParams)


State 121

   29 Statement: IF LPAR Expr RPAR . Statement
   30          | IF LPAR Expr RPAR . Statement ELSE Statement

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    $default  reduce using rule 38 (StatementThird)

    Statement         go to state 150
    StatementThird    go to state 41
    MethodInvocation  go to state 42
    Assignment        go to state 43
    ParseArgs         go to state 44


State 122

   35 Statement: PRINT LPAR StatementPrint RPAR . SEMICOLON

    SEMICOLON  shift, and go to state 151


State 123

   51 ParseArgs: PARSEINT LPAR error RPAR .

    $default  reduce using rule 51 (ParseArgs)


State 124

   50 ParseArgs: PARSEINT LPAR ID LSQ . Expr RSQ RPAR

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 152


State 125

   73 Expr: LPAR error RPAR .

    $default  reduce using rule 73 (Expr)


State 126

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   57     | Expr AND Expr .
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    EQ      shift, and go to state 98
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    NE      shift, and go to state 105
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 57 (Expr)


State 127

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   54     | Expr STAR Expr .
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    $default  reduce using rule 54 (Expr)


State 128

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   55     | Expr DIV Expr .
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    $default  reduce using rule 55 (Expr)


State 129

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   62     | Expr EQ Expr .
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 62 (Expr)


State 130

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   63     | Expr GE Expr .
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 63 (Expr)


State 131

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   64     | Expr GT Expr .
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 64 (Expr)


State 132

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   65     | Expr LE Expr .
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 65 (Expr)


State 133

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   66     | Expr LT Expr .
   67     | Expr . NE Expr

    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 66 (Expr)


State 134

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   53     | Expr MINUS Expr .
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    STAR  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 104

    $default  reduce using rule 53 (Expr)


State 135

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   56     | Expr MOD Expr .
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    $default  reduce using rule 56 (Expr)


State 136

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr
   67     | Expr NE Expr .

    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 67 (Expr)


State 137

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   58     | Expr OR Expr .
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    AND     shift, and go to state 95
    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    EQ      shift, and go to state 98
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    NE      shift, and go to state 105
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 58 (Expr)


State 138

   52 Expr: Expr . PLUS Expr
   52     | Expr PLUS Expr .
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    STAR  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 104

    $default  reduce using rule 52 (Expr)


State 139

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   60     | Expr LSHIFT Expr .
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 103
    MOD    shift, and go to state 104
    PLUS   shift, and go to state 107

    $default  reduce using rule 60 (Expr)


State 140

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   61     | Expr RSHIFT Expr .
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    STAR   shift, and go to state 96
    DIV    shift, and go to state 97
    MINUS  shift, and go to state 103
    MOD    shift, and go to state 104
    PLUS   shift, and go to state 107

    $default  reduce using rule 61 (Expr)


State 141

   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   59     | Expr XOR Expr .
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    EQ      shift, and go to state 98
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    NE      shift, and go to state 105
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110

    $default  reduce using rule 59 (Expr)


State 142

   31 Statement: WHILE LPAR Expr RPAR . Statement

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    $default  reduce using rule 38 (StatementThird)

    Statement         go to state 153
    StatementThird    go to state 41
    MethodInvocation  go to state 42
    Assignment        go to state 43
    ParseArgs         go to state 44


State 143

   44 MethodInvocation: ID LPAR MethodInvocationSec RPAR .

    $default  reduce using rule 44 (MethodInvocation)


State 144

   47 MethodInvocationThird: COMMA . Expr MethodInvocationThird

    LPAR      shift, and go to state 57
    MINUS     shift, and go to state 58
    NOT       shift, and go to state 59
    PLUS      shift, and go to state 60
    PARSEINT  shift, and go to state 33
    ID        shift, and go to state 62
    INTLIT    shift, and go to state 63
    REALLIT   shift, and go to state 64
    BOOLLIT   shift, and go to state 65

    MethodInvocation  go to state 66
    ParseArgs         go to state 67
    Expr              go to state 154


State 145

   45 MethodInvocationSec: Expr MethodInvocationThird .

    $default  reduce using rule 45 (MethodInvocationSec)


State 146

   27 VarDeclSec: COMMA ID . VarDeclSec

    COMMA  shift, and go to state 116

    $default  reduce using rule 26 (VarDeclSec)

    VarDeclSec  go to state 155


State 147

   25 VarDecl: Type ID VarDeclSec SEMICOLON .

    $default  reduce using rule 25 (VarDecl)


State 148

   18 FormalParams: STRING LSQ RSQ ID .

    $default  reduce using rule 18 (FormalParams)


State 149

   19 FormalParamsSec: COMMA Type . ID FormalParamsSec

    ID  shift, and go to state 156


State 150

   29 Statement: IF LPAR Expr RPAR Statement .
   30          | IF LPAR Expr RPAR Statement . ELSE Statement

    ELSE  shift, and go to state 157

    $default  reduce using rule 29 (Statement)


State 151

   35 Statement: PRINT LPAR StatementPrint RPAR SEMICOLON .

    $default  reduce using rule 35 (Statement)


State 152

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr . RSQ RPAR
   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    AND     shift, and go to state 95
    STAR    shift, and go to state 96
    DIV     shift, and go to state 97
    EQ      shift, and go to state 98
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    NE      shift, and go to state 105
    OR      shift, and go to state 106
    PLUS    shift, and go to state 107
    RSQ     shift, and go to state 158
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111


State 153

   31 Statement: WHILE LPAR Expr RPAR Statement .

    $default  reduce using rule 31 (Statement)


State 154

   47 MethodInvocationThird: COMMA Expr . MethodInvocationThird
   52 Expr: Expr . PLUS Expr
   53     | Expr . MINUS Expr
   54     | Expr . STAR Expr
   55     | Expr . DIV Expr
   56     | Expr . MOD Expr
   57     | Expr . AND Expr
   58     | Expr . OR Expr
   59     | Expr . XOR Expr
   60     | Expr . LSHIFT Expr
   61     | Expr . RSHIFT Expr
   62     | Expr . EQ Expr
   63     | Expr . GE Expr
   64     | Expr . GT Expr
   65     | Expr . LE Expr
   66     | Expr . LT Expr
   67     | Expr . NE Expr

    AND     shift, and go to state 95
    STAR    shift, and go to state 96
    COMMA   shift, and go to state 144
    DIV     shift, and go to state 97
    EQ      shift, and go to state 98
    GE      shift, and go to state 99
    GT      shift, and go to state 100
    LE      shift, and go to state 101
    LT      shift, and go to state 102
    MINUS   shift, and go to state 103
    MOD     shift, and go to state 104
    NE      shift, and go to state 105
    OR      shift, and go to state 106
    PLUS    shift, and go to state 107
    LSHIFT  shift, and go to state 109
    RSHIFT  shift, and go to state 110
    XOR     shift, and go to state 111

    $default  reduce using rule 48 (MethodInvocationThird)

    MethodInvocationThird  go to state 159


State 155

   27 VarDeclSec: COMMA ID VarDeclSec .

    $default  reduce using rule 27 (VarDeclSec)


State 156

   19 FormalParamsSec: COMMA Type ID . FormalParamsSec

    COMMA  shift, and go to state 119

    $default  reduce using rule 20 (FormalParamsSec)

    FormalParamsSec  go to state 160


State 157

   30 Statement: IF LPAR Expr RPAR Statement ELSE . Statement

    LBRACE    shift, and go to state 30
    IF        shift, and go to state 31
    PRINT     shift, and go to state 32
    PARSEINT  shift, and go to state 33
    RETURN    shift, and go to state 34
    WHILE     shift, and go to state 35
    ID        shift, and go to state 36

    $default  reduce using rule 38 (StatementThird)

    Statement         go to state 161
    StatementThird    go to state 41
    MethodInvocation  go to state 42
    Assignment        go to state 43
    ParseArgs         go to state 44


State 158

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 162


State 159

   47 MethodInvocationThird: COMMA Expr MethodInvocationThird .

    $default  reduce using rule 47 (MethodInvocationThird)


State 160

   19 FormalParamsSec: COMMA Type ID FormalParamsSec .

    $default  reduce using rule 19 (FormalParamsSec)


State 161

   30 Statement: IF LPAR Expr RPAR Statement ELSE Statement .

    $default  reduce using rule 30 (Statement)


State 162

   50 ParseArgs: PARSEINT LPAR ID LSQ Expr RSQ RPAR .

    $default  reduce using rule 50 (ParseArgs)
